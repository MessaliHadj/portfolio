version: '3.9'
services:
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
    container_name: portfolio-bdd
    ports:
      - '5432:5432'
  nginx:
    depends_on:
      - api
      - app
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./hwg-portfolio/nginx
    container_name: server-portfolio
    ports:
      - "80:80"
    volumes:
      - ./hwg-portfolio/nginx/default.conf:/etc/nginx/conf.d/default.conf
  api:
    build:
      dockerfile: Dockerfile.dev
      context: './hwg-api'
    volumes:
      - /app/node_modules
      - ./hwg-api:/app
    environment:
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=hwg_portfolio
      - PGPASSWORD=postgres_password
      - PGPORT=5432
    container_name: portfolio-api
    ports:
      - '8080:8080'
  app:
    stdin_open: true
    build:
      dockerfile: Dockerfile.dev
      context: './hwg-portfolio'
    volumes:
      - /app/node_modules
      - ./hwg-portfolio:/app
    container_name: portfolio-front
    ports:
      - '4002:3000'

# To go to production, comment on the lines above and uncomment the lines below

# version: '3.9'
# name: hwg-portfolio-prod
# services:
#   postgres:
#     image: 'postgres:latest'
#     environment:
#       - POSTGRES_PASSWORD=postgres_password
#     container_name: portfolio-bdd-prod
#     ports:
#       - '5432:5432'
#   api:
#     build:
#       dockerfile: Dockerfile
#       context: './hwg-api'
#     volumes:
#       - /app/node_modules
#       - ./hwg-api:/app
#     environment:
#       - PGUSER=postgres
#       - PGHOST=postgres
#       - PGDATABASE=hwg-portfolio
#       - PGPASSWORD=postgres_password
#       - PGPORT=5432
#     container_name: portfolio-api-prod
#     ports:
#       - '8080:8080'
#   app:
#     stdin_open: true
#     build:
#       dockerfile: Dockerfile
#       context: './hwg-portfolio'
#     volumes:
#       - /app/node_modules
#       - ./hwg-portfolio:/app
#     container_name: portfolio-front-prod
#     ports:
#       - '80:80'